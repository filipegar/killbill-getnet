/*******************************************************************************
 * Copyright (c) 2023 Filipe Garcia
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * SPDX short identifier: Apache-2.0
 *
 * Contributors:
 *     Filipe Garcia - initial API and implementation
 *******************************************************************************/
/*
 * This file is generated by jOOQ.
 */
package org.killbill.billing.plugin.getnet.dao.gen.tables;

import java.math.BigDecimal;
import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;
import org.jooq.types.ULong;
import org.killbill.billing.plugin.getnet.dao.gen.Indexes;
import org.killbill.billing.plugin.getnet.dao.gen.Keys;
import org.killbill.billing.plugin.getnet.dao.gen.Killbill;
import org.killbill.billing.plugin.getnet.dao.gen.tables.records.GetnetPaymentsRecord;

/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class GetnetPayments extends TableImpl<GetnetPaymentsRecord> {

	private static final long serialVersionUID = 1L;

	/**
	 * The reference instance of <code>killbill.getnet_payments</code>
	 */
	public static final GetnetPayments GETNET_PAYMENTS = new GetnetPayments();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<GetnetPaymentsRecord> getRecordType() {
		return GetnetPaymentsRecord.class;
	}

	/**
	 * The column <code>killbill.getnet_payments.record_id</code>.
	 */
	public final TableField<GetnetPaymentsRecord, ULong> RECORD_ID = createField(DSL.name("record_id"),
			SQLDataType.BIGINTUNSIGNED.nullable(false).identity(true), this, "");

	/**
	 * The column <code>killbill.getnet_payments.kb_account_id</code>.
	 */
	public final TableField<GetnetPaymentsRecord, String> KB_ACCOUNT_ID = createField(DSL.name("kb_account_id"),
			SQLDataType.CHAR(36).nullable(false), this, "");

	/**
	 * The column <code>killbill.getnet_payments.kb_payment_id</code>.
	 */
	public final TableField<GetnetPaymentsRecord, String> KB_PAYMENT_ID = createField(DSL.name("kb_payment_id"),
			SQLDataType.CHAR(36).nullable(false), this, "");

	/**
	 * The column <code>killbill.getnet_payments.kb_payment_transaction_id</code>.
	 */
	public final TableField<GetnetPaymentsRecord, String> KB_PAYMENT_TRANSACTION_ID = createField(
			DSL.name("kb_payment_transaction_id"), SQLDataType.CHAR(36).nullable(false), this, "");

	/**
	 * The column <code>killbill.getnet_payments.transaction_type</code>.
	 */
	public final TableField<GetnetPaymentsRecord, String> TRANSACTION_TYPE = createField(DSL.name("transaction_type"),
			SQLDataType.VARCHAR(32).nullable(false), this, "");

	/**
	 * The column <code>killbill.getnet_payments.amount</code>.
	 */
	public final TableField<GetnetPaymentsRecord, BigDecimal> AMOUNT = createField(DSL.name("amount"),
			SQLDataType.DECIMAL(15, 9).defaultValue(DSL.inline("NULL", SQLDataType.DECIMAL)), this, "");

	/**
	 * The column <code>killbill.getnet_payments.currency</code>.
	 */
	public final TableField<GetnetPaymentsRecord, String> CURRENCY = createField(DSL.name("currency"),
			SQLDataType.CHAR(3).defaultValue(DSL.inline("NULL", SQLDataType.CHAR)), this, "");

	/**
	 * The column <code>killbill.getnet_payments.getnet_payment_id</code>.
	 */
	public final TableField<GetnetPaymentsRecord, String> GETNET_PAYMENT_ID = createField(DSL.name("getnet_payment_id"),
			SQLDataType.CHAR(36).nullable(false), this, "");

	/**
	 * The column <code>killbill.getnet_payments.seller_id</code>.
	 */
	public final TableField<GetnetPaymentsRecord, String> SELLER_ID = createField(DSL.name("seller_id"),
			SQLDataType.CHAR(36).nullable(false), this, "");

	/**
	 * The column <code>killbill.getnet_payments.order_id</code>.
	 */
	public final TableField<GetnetPaymentsRecord, String> ORDER_ID = createField(DSL.name("order_id"),
			SQLDataType.VARCHAR(36).nullable(false), this, "");

	/**
	 * The column <code>killbill.getnet_payments.getnet_status</code>.
	 */
	public final TableField<GetnetPaymentsRecord, String> GETNET_STATUS = createField(DSL.name("getnet_status"),
			SQLDataType.VARCHAR(20).nullable(false), this, "");

	/**
	 * The column <code>killbill.getnet_payments.received_at</code>.
	 */
	public final TableField<GetnetPaymentsRecord, LocalDateTime> RECEIVED_AT = createField(DSL.name("received_at"),
			SQLDataType.LOCALDATETIME(0).nullable(false), this, "");

	/**
	 * The column <code>killbill.getnet_payments.authorization_code</code>.
	 */
	public final TableField<GetnetPaymentsRecord, String> AUTHORIZATION_CODE = createField(
			DSL.name("authorization_code"),
			SQLDataType.VARCHAR(20).defaultValue(DSL.inline("NULL", SQLDataType.VARCHAR)), this, "");

	/**
	 * The column <code>killbill.getnet_payments.authorized_at</code>.
	 */
	public final TableField<GetnetPaymentsRecord, LocalDateTime> AUTHORIZED_AT = createField(DSL.name("authorized_at"),
			SQLDataType.LOCALDATETIME(0).defaultValue(DSL.inline("NULL", SQLDataType.LOCALDATETIME)), this, "");

	/**
	 * The column <code>killbill.getnet_payments.reason_code</code>.
	 */
	public final TableField<GetnetPaymentsRecord, String> REASON_CODE = createField(DSL.name("reason_code"),
			SQLDataType.VARCHAR(5).defaultValue(DSL.inline("NULL", SQLDataType.VARCHAR)), this, "");

	/**
	 * The column <code>killbill.getnet_payments.reason_message</code>.
	 */
	public final TableField<GetnetPaymentsRecord, String> REASON_MESSAGE = createField(DSL.name("reason_message"),
			SQLDataType.VARCHAR(250).defaultValue(DSL.inline("NULL", SQLDataType.VARCHAR)), this, "");

	/**
	 * The column <code>killbill.getnet_payments.soft_descriptor</code>.
	 */
	public final TableField<GetnetPaymentsRecord, String> SOFT_DESCRIPTOR = createField(DSL.name("soft_descriptor"),
			SQLDataType.VARCHAR(22).defaultValue(DSL.inline("NULL", SQLDataType.VARCHAR)), this, "");

	/**
	 * The column <code>killbill.getnet_payments.brand</code>.
	 */
	public final TableField<GetnetPaymentsRecord, String> BRAND = createField(DSL.name("brand"),
			SQLDataType.VARCHAR(50).defaultValue(DSL.inline("NULL", SQLDataType.VARCHAR)), this, "");

	/**
	 * The column <code>killbill.getnet_payments.terminal_nsu</code>.
	 */
	public final TableField<GetnetPaymentsRecord, String> TERMINAL_NSU = createField(DSL.name("terminal_nsu"),
			SQLDataType.VARCHAR(100).defaultValue(DSL.inline("NULL", SQLDataType.VARCHAR)), this, "");

	/**
	 * The column <code>killbill.getnet_payments.acquirer_transaction_id</code>.
	 */
	public final TableField<GetnetPaymentsRecord, String> ACQUIRER_TRANSACTION_ID = createField(
			DSL.name("acquirer_transaction_id"),
			SQLDataType.VARCHAR(20).defaultValue(DSL.inline("NULL", SQLDataType.VARCHAR)), this, "");

	/**
	 * The column <code>killbill.getnet_payments.transaction_id</code>.
	 */
	public final TableField<GetnetPaymentsRecord, String> TRANSACTION_ID = createField(DSL.name("transaction_id"),
			SQLDataType.VARCHAR(250).defaultValue(DSL.inline("NULL", SQLDataType.VARCHAR)), this, "");

	/**
	 * The column <code>killbill.getnet_payments.created_date</code>.
	 */
	public final TableField<GetnetPaymentsRecord, LocalDateTime> CREATED_DATE = createField(DSL.name("created_date"),
			SQLDataType.LOCALDATETIME(0).nullable(false), this, "");

	/**
	 * The column <code>killbill.getnet_payments.kb_tenant_id</code>.
	 */
	public final TableField<GetnetPaymentsRecord, String> KB_TENANT_ID = createField(DSL.name("kb_tenant_id"),
			SQLDataType.CHAR(36).nullable(false), this, "");

	private GetnetPayments(Name alias, Table<GetnetPaymentsRecord> aliased) {
		this(alias, aliased, null);
	}

	private GetnetPayments(Name alias, Table<GetnetPaymentsRecord> aliased, Field<?>[] parameters) {
		super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
	}

	/**
	 * Create an aliased <code>killbill.getnet_payments</code> table reference
	 */
	public GetnetPayments(String alias) {
		this(DSL.name(alias), GETNET_PAYMENTS);
	}

	/**
	 * Create an aliased <code>killbill.getnet_payments</code> table reference
	 */
	public GetnetPayments(Name alias) {
		this(alias, GETNET_PAYMENTS);
	}

	/**
	 * Create a <code>killbill.getnet_payments</code> table reference
	 */
	public GetnetPayments() {
		this(DSL.name("getnet_payments"), null);
	}

	public <O extends Record> GetnetPayments(Table<O> child, ForeignKey<O, GetnetPaymentsRecord> key) {
		super(child, key, GETNET_PAYMENTS);
	}

	@Override
	public Schema getSchema() {
		return aliased() ? null : Killbill.KILLBILL;
	}

	@Override
	public List<Index> getIndexes() {
		return Arrays.asList(Indexes.GETNET_PAYMENTS_GETNET_PAYMENTS_GETNET_PAYMENT_ID,
				Indexes.GETNET_PAYMENTS_GETNET_PAYMENTS_KB_PAYMENT_ID,
				Indexes.GETNET_PAYMENTS_GETNET_PAYMENTS_KB_PAYMENT_TRANSACTION_ID);
	}

	@Override
	public Identity<GetnetPaymentsRecord, ULong> getIdentity() {
		return (Identity<GetnetPaymentsRecord, ULong>) super.getIdentity();
	}

	@Override
	public UniqueKey<GetnetPaymentsRecord> getPrimaryKey() {
		return Keys.KEY_GETNET_PAYMENTS_PRIMARY;
	}

	@Override
	public GetnetPayments as(String alias) {
		return new GetnetPayments(DSL.name(alias), this);
	}

	@Override
	public GetnetPayments as(Name alias) {
		return new GetnetPayments(alias, this);
	}

	/**
	 * Rename this table
	 */
	@Override
	public GetnetPayments rename(String name) {
		return new GetnetPayments(DSL.name(name), null);
	}

	/**
	 * Rename this table
	 */
	@Override
	public GetnetPayments rename(Name name) {
		return new GetnetPayments(name, null);
	}

}
